<div metal:define-macro="widget-wrapper"
     i18n:domain="plone"
     tal:define="widget nocall:context;
                 widget_name widget/name;
                 hidden python:widget.mode == 'hidden';
                 error widget/error;
                 error_class python:error and 'error' or '';
                 empty_values python:(None, '', [], ('', '', '', '00', '00', ''), ('', '', ''));
                 empty_class python:(widget.value in empty_values) and 'empty' or '';
                 wrapper_css_class  widget/wrapper_css_class|nothing"
     data-pat-inlinevalidation='{"type":"z3c.form"}'
     tal:attributes="class string:form-group pat-inlinevalidation ${widget_name} ${error_class} ${empty_class}; data-fieldname widget_name">

  <label for="" tal:attributes="for widget/id" tal:condition="python:not hidden and widget.label">
    <span i18n:translate="" tal:replace="widget/label"></span>
    <span class="required" tal:condition="python:widget.required and widget.mode == 'input'">&#42;</span>
  </label>

  <input type="text" tal:replace="structure widget/render" metal:define-slot="widget" />

  <tal:condition tal:condition="error">
    <div class="invalid-feedback" tal:content="structure error/render|nothing"></div>
  </tal:condition>

  <tal:define i18n:domain="plonetheme.tokyo">
    <tal:condition tal:condition="not:error">
      <div class="valid-feedback" i18n:translate="">Looks good!</div>
    </tal:condition>
  </tal:define>

  <small class="form-text text-muted"
         tal:define="description python: getattr(widget, 'description', widget.field.description)"
         i18n:translate=""
         tal:content="structure description"
         tal:condition="python:description and not hidden">
  </small>

</div>
