<div metal:define-macro="widget-wrapper"
     i18n:domain="plone"
     tal:define="widget nocall:context;
                 widget_id widget/id;
                 widget_name widget/name;
                 data widget/json_data;
                 data_type data/type;
                 was_submitted python:len(request.form) > 1;
                 hidden python:data['mode'] == 'hidden';
                 is_opt python:data_type in ['check', 'radio'];
                 is_checkbox python:data_type == 'check';
                 is_radio python:data_type == 'radio';
                 error widget/error;
                 error_class python:('is-invalid' if error else 'is-valid') if was_submitted else '';
                 field_class python:'form-control' if not is_opt else 'form-check-input'"
     data-pat-inlinevalidation='{"type":"z3c.form"}'
     tal:attributes="id string:formfield-${widget/id};
                     class string:mb-3 pat-inlinevalidation;
                     data-fieldname widget_name;
                     ">

  <?python widget.addClass(' '.join([field_class, error_class])) ?>

  <tal:define tal:define="description python:getattr(widget, 'description', widget.field.description);
                          required python:getattr(widget, 'required', widget.field.required)">

    <tal:condition tal:condition="not:is_opt">

      <label for="${widget/id}" class="d-block form-label ${python:'required' if required else ''}" tal:condition="python:not hidden and widget.label" i18n:translate="">
        ${widget/label}
      </label>

      <tal:define tal:define="pattern widget/pattern|nothing" tal:condition="pattern">

        <tal:condition tal:condition="python:widget.pattern == 'pickadate'">
          <?python
            widget.pattern_options = {
              'classWrapperName': 'pattern-pickadate-wrapper d-flex',
              'classDateName': 'pattern-pickadate-date form-control',
              'classTimeName': 'pattern-pickadate-time form-control',
            }
          ?>
        </tal:condition>

      </tal:define>

      <input type="text" tal:replace="structure widget/render" metal:define-slot="widget" />

      <small class="form-text text-muted"
             tal:content="structure description"
             tal:condition="python:description and not hidden">
      </small>

    </tal:condition>

    <tal:condition tal:condition="is_opt">

      <label for="${widget/id}" class="d-block form-label ${python:'required' if required else ''}" tal:condition="python:not hidden and widget.label" i18n:translate="">
        ${widget/label}
      </label>

      <small class="form-text text-muted mb-2" tal:condition="python:description and not hidden" tal:content="structure description">Description</small>

      <tal:define tal:define="options data/options">

        <tal:checkbox tal:condition="python:data_type=='check'">
        <tal:repeat tal:repeat="opt options">
          <div class="form-check option" id="${widget/id}">
            <input type="checkbox" class="${widget/klass}" id="${opt/id}" name="${opt/name}" value="${opt/value}" tal:attributes="checked opt/checked">
            <label class="form-check-label" for="${opt/id}" tal:define="desc opt/description|nothing">
              <div>${opt/label}</div>
            </label>
            <input type="hidden" name="${widget/name}-empty-marker" value="1">
          </div>
        </tal:repeat>
        </tal:checkbox>

        <tal:radio tal:condition="python:data_type=='radio'">
        <tal:repeat tal:repeat="opt options">
          <div class="form-check">
            <input type="radio" class="${widget/klass}" id="${opt/id}" name="${opt/name}" value="${opt/value}" tal:attributes="checked opt/checked">
            <label class="form-check-label" for="${opt/id}" tal:define="desc opt/description|nothing">
              <div>${opt/label}</div>
            </label>
            <input type="hidden" name="${widget/name}-empty-marker" value="1">
          </div>
        </tal:repeat>
        </tal:radio>

      </tal:define>

    </tal:condition>

    <tal:condition tal:condition="error">
      <div class="invalid-feedback" tal:content="structure error/render|nothing"></div>
    </tal:condition>

  </tal:define>

</div>
