# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                plone-version:
                  - 'Plone52'
                python-version: [3.7, 3.8, 3.9]

        steps:

            - uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install system libraries
              run: sudo apt-get install libxml2-dev libxslt1-dev libjpeg-dev xvfb

            - uses: actions/cache@v2
              with:
                  path: |
                    ~/buildout-cache
                    ~/extends
                    ~/.cache/pip
                  key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.plone-version }}-${{ hashFiles('**/*.cfg') }}

            - name: Setup buildout cache
              run: |
                  mkdir -p ~/buildout-cache/{eggs,downloads}
                  mkdir ~/.buildout
                  echo "[buildout]" > $HOME/.buildout/default.cfg
                  echo "download-cache = $HOME/buildout-cache/downloads" >> $HOME/.buildout/default.cfg
                  echo "eggs-directory = $HOME/buildout-cache/eggs" >> $HOME/.buildout/default.cfg

            - name: Create venv
              run: |
                  python3 -m venv venv

            - name: Install dependencies
              run: |
                  ./venv/pip install --upgrade pip
                  ./venv/pip install -r requirements.txt

            - name: Run buildout
              run: |
                  ./venv/bin/buildout -c develop.cfg

            - name: Run tests
              run: |
                  bin/test-coverage

            - name: "Upload coverage to Codecov"
              uses: "codecov/codecov-action@v1"
              with:
                fail_ci_if_error: true
              if: matrix.python-version == '3.7'
